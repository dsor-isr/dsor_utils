{"config":{"indexing":"full","lang":["en","pt"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;"},"docs":[{"location":"","text":"","title":"Introduction"},{"location":"dsor-ros-messages/","text":"DSOR Messages","title":"Reference"},{"location":"dsor-utility-functions/","text":"Math TODO - create documentation for this API Rotations TODO - create documentation for this API Frames This library implements a set of templates to convert between ENU frame and NED frames, both for angles expressed in the inertial frame and in the body frame of a vehicle. Conventions on quaternion rotations between frames In ROS a quaternion expresses a rotation of the body frame of the vehicle (which is ENU, i.e. ENU_base_link) with respect to (w.r.t) the inertial frame of reference in ENU (i.e. ENU_inertial_frame). Note that in ENU_base_link, the X-axis comes out of the front of the vehicle and a Z-axis that goes \"out of the vehicle in upwards direction\". On the other hand, in marine and aerial vehicles it is typical to consider a body frame which is expressed in NED_base_link, where the X-axis also comes out of the front of the vehicle but the Z-axis goes \"out of the vehicle in downwards direction\", according to the following figure (adapted from PX4 website). Therefore, according to the literature, a quaternion should express a rotation of the body frame of the vehicle (which is NED, i.e. NED_base_link) with respect to (w.r.t) the inertial frame of reference in NED (i.e. NED_inertial_frame). From the Figure it is trivial to conclude that rotating ENU_base_link <-> NED_base_link is different then rotating ENU_inertial_frame <-> NED_inertial_frame. This comes from the fact that in the body frame, both ENU and NED conventions arbitrate that the X axis comes forwards of the vehicle (this axis does not change), while in the inertial frame you can see from the figure above that it does change. Now that we have explained both the rotations in the body and inertial frames, let's see how to perform them: Inertial Frame 1.1) To convert a rotation expressed in ENU to a rotation expressed in NED, we must apply the following rotation (using Z-Y-X convention): - Rotate 90\u00ba about Z-axis - Rotate 0\u00ba about Y-axis - Rotate 180\u00ba about X-axis 1.2) To convert a rotation expressed in NED to a rotation expressed in ENU, we must apply the following rotation (using Z-Y-X convention): - Rotate -90\u00ba about Z-axis - Rotate 180\u00ba about Y-axis - Rotate 0\u00ba about X-axis Body Frame (a.k.a ROS base_link) 2.1) To convert a rotation expressed in the ENU body frame (ROS base_link) to a rotation expressed in NED body frame (the typical body frame adopted for aerial and marine crafts), we must apply the following rotation (using Z-Y-X convention): - Rotate 0\u00ba about Z-axis - Rotate 0\u00ba about Y-axis - Rotate 180\u00ba about X-axis 2.2) To convert a rotation expressed in the NED body frame (the typical body frame adopted for aerial and marine crafts) to a rotation expressed in the ENU body frame (ROS base_link), we must apply the following rotation (using Z-Y-X convention): - Rotate 0\u00ba about Z-axis - Rotate 0\u00ba about Y-axis - Rotate -180\u00ba about X-axis Given this knowledge, we can now convert a ROS quaternion/rotation expressed in ENU_inertial_frame w.r.t. ENU_base_link to a \"regular\" quaternion expressed in NED_inertial_frame w.r.t. NED_base_link. ROS -> \"regular\" - State: rotation in ENU w.r.t. ENU_base_link - Action: Apply body frame rotation (operation 2.1) - State: rotation in ENU w.r.t. NED_base_link - Action: Apply inertial frame rotation (operation 1.1) - State: rotation in NED w.r.t. NED_base_link \"regular\" -> ROS - State: rotation in NED w.r.t. NED_base_link - Action: Apply body frame rotation (operation 2.2) - State: rotation in NED w.r.t. ENU_base_link - Action: Apply inertial frame rotation (operation 1.2) - State: rotation in ENU w.r.t. ENU_base_link Transform vectors and covariances between frames For vectors w.r.t body or inertial frames expressed in ENU (Forward, Left, Up) , the transformation to express them in NED (Forward, Right, Down) depends on their respective frame of reference. To transform vectors w.r.t the body-frame the conversion is quite simple and only requires us to: - apply an 180\u00ba rotation around X (Forward) axis To transform vectors w.r.t the inertial-frame the conversion is different and is made in the following way: - Switch XY axis - Invert the Z axis Regarding coordinate frame conversion for covariance matrices, the principle is similar, however, the computations are slightly different as shown on the following image. Spherical Coordinates TODO - create documentation for this API","title":"Reference"},{"location":"dsor-utility-functions/#math","text":"TODO - create documentation for this API","title":"Math"},{"location":"dsor-utility-functions/#rotations","text":"TODO - create documentation for this API","title":"Rotations"},{"location":"dsor-utility-functions/#frames","text":"This library implements a set of templates to convert between ENU frame and NED frames, both for angles expressed in the inertial frame and in the body frame of a vehicle.","title":"Frames"},{"location":"dsor-utility-functions/#conventions-on-quaternion-rotations-between-frames","text":"In ROS a quaternion expresses a rotation of the body frame of the vehicle (which is ENU, i.e. ENU_base_link) with respect to (w.r.t) the inertial frame of reference in ENU (i.e. ENU_inertial_frame). Note that in ENU_base_link, the X-axis comes out of the front of the vehicle and a Z-axis that goes \"out of the vehicle in upwards direction\". On the other hand, in marine and aerial vehicles it is typical to consider a body frame which is expressed in NED_base_link, where the X-axis also comes out of the front of the vehicle but the Z-axis goes \"out of the vehicle in downwards direction\", according to the following figure (adapted from PX4 website). Therefore, according to the literature, a quaternion should express a rotation of the body frame of the vehicle (which is NED, i.e. NED_base_link) with respect to (w.r.t) the inertial frame of reference in NED (i.e. NED_inertial_frame). From the Figure it is trivial to conclude that rotating ENU_base_link <-> NED_base_link is different then rotating ENU_inertial_frame <-> NED_inertial_frame. This comes from the fact that in the body frame, both ENU and NED conventions arbitrate that the X axis comes forwards of the vehicle (this axis does not change), while in the inertial frame you can see from the figure above that it does change. Now that we have explained both the rotations in the body and inertial frames, let's see how to perform them: Inertial Frame 1.1) To convert a rotation expressed in ENU to a rotation expressed in NED, we must apply the following rotation (using Z-Y-X convention): - Rotate 90\u00ba about Z-axis - Rotate 0\u00ba about Y-axis - Rotate 180\u00ba about X-axis 1.2) To convert a rotation expressed in NED to a rotation expressed in ENU, we must apply the following rotation (using Z-Y-X convention): - Rotate -90\u00ba about Z-axis - Rotate 180\u00ba about Y-axis - Rotate 0\u00ba about X-axis Body Frame (a.k.a ROS base_link) 2.1) To convert a rotation expressed in the ENU body frame (ROS base_link) to a rotation expressed in NED body frame (the typical body frame adopted for aerial and marine crafts), we must apply the following rotation (using Z-Y-X convention): - Rotate 0\u00ba about Z-axis - Rotate 0\u00ba about Y-axis - Rotate 180\u00ba about X-axis 2.2) To convert a rotation expressed in the NED body frame (the typical body frame adopted for aerial and marine crafts) to a rotation expressed in the ENU body frame (ROS base_link), we must apply the following rotation (using Z-Y-X convention): - Rotate 0\u00ba about Z-axis - Rotate 0\u00ba about Y-axis - Rotate -180\u00ba about X-axis Given this knowledge, we can now convert a ROS quaternion/rotation expressed in ENU_inertial_frame w.r.t. ENU_base_link to a \"regular\" quaternion expressed in NED_inertial_frame w.r.t. NED_base_link. ROS -> \"regular\" - State: rotation in ENU w.r.t. ENU_base_link - Action: Apply body frame rotation (operation 2.1) - State: rotation in ENU w.r.t. NED_base_link - Action: Apply inertial frame rotation (operation 1.1) - State: rotation in NED w.r.t. NED_base_link \"regular\" -> ROS - State: rotation in NED w.r.t. NED_base_link - Action: Apply body frame rotation (operation 2.2) - State: rotation in NED w.r.t. ENU_base_link - Action: Apply inertial frame rotation (operation 1.2) - State: rotation in ENU w.r.t. ENU_base_link","title":"Conventions on quaternion rotations between frames"},{"location":"dsor-utility-functions/#transform-vectors-and-covariances-between-frames","text":"For vectors w.r.t body or inertial frames expressed in ENU (Forward, Left, Up) , the transformation to express them in NED (Forward, Right, Down) depends on their respective frame of reference. To transform vectors w.r.t the body-frame the conversion is quite simple and only requires us to: - apply an 180\u00ba rotation around X (Forward) axis To transform vectors w.r.t the inertial-frame the conversion is different and is made in the following way: - Switch XY axis - Invert the Z axis Regarding coordinate frame conversion for covariance matrices, the principle is similar, however, the computations are slightly different as shown on the following image.","title":"Transform vectors and covariances between frames"},{"location":"dsor-utility-functions/#spherical-coordinates","text":"TODO - create documentation for this API","title":"Spherical Coordinates"},{"location":"pages/Acknowledgments/","text":"The DSOR Utils project results from the work and dedication of many. Share the love \u2764\ufe0f with the following members that came before you did! Active Developers Marcelo Jacinto marcelo.jacinto@tecnico.ulisboa.pt Andr\u00e9 Potes andre.potes@tecnico.ulisboa.pt And never forget, we stand on the shoulders of giants!","title":"Acknowledgments"},{"location":"pages/Acknowledgments/#active-developers","text":"Marcelo Jacinto marcelo.jacinto@tecnico.ulisboa.pt Andr\u00e9 Potes andre.potes@tecnico.ulisboa.pt And never forget, we stand on the shoulders of giants!","title":"Active Developers"},{"location":"pages/CHANGELOG/","text":"Changelog v1.1 First version of dsor_utils repository with automatic documentation generation","title":"Changelog"},{"location":"pages/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"pages/CHANGELOG/#v11","text":"First version of dsor_utils repository with automatic documentation generation","title":"v1.1"},{"location":"pages/CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at marcelo.jacinto@tecnico.ulisboa.pt. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code of Conduct"},{"location":"pages/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"pages/CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"pages/CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"pages/CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"pages/CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"pages/CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at marcelo.jacinto@tecnico.ulisboa.pt. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"pages/CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"pages/CONTRIBUTING/","text":"TODO","title":"Contributing"},{"location":"pages/CONTRIBUTING/#todo","text":"","title":"TODO"},{"location":"pages/LICENSE/","text":"MIT License Copyright (c) 2021 dsor-isr Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"pages/get_started/Get-Started/","text":"TODO","title":"Get Started"}]}